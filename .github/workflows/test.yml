name: Tests

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 22.x

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --color=always

      - name: Checkout annotated samples sibling branch
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          path: test/samples-annotated
          ref: annotated-samples

      - name: Check git status
        run: git status

      - name: Run tests
        run: npm test --color=always -- --coverage
        id: test

      - name: Commit annotated samples
        if: success() || steps.test.conclusion == 'failure'
        id: commitAnnotatedSamples
        working-directory: test/samples-annotated
        run: |
          git config --local user.email "github-actions[bot]@noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "${{ github.ref }} ${{ github.sha }}"

      - name: Push annotated samples sibling branch
        if: success() || steps.commitAnnotatedSamples.conclusion == 'success'
        uses: ad-m/github-push-action@master
        with:
          directory: test/samples-annotated
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: annotated-samples

      # Publish to gh-pages
      - name: Publish to gh-pages
        if: success() || steps.test.conclusion == 'failure'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: html

      - name: Print annotated and decoded files
        # Always print annotated files, even on other failure
        if: success() || steps.test.conclusion == 'failure'
        run: |
          find test/samples-annotated -type f -name "*.dat.txt" | while read file; do
            echo "--- $file ---"
            cat "$file"
          done
      - uses: actions/upload-artifact@v4
        # Always upload annotated files, even on other failure
        if: success() || steps.test.conclusion == 'failure'
        with:
          name: annotated-files
          path: test/samples-annotated
          if-no-files-found: error
          overwrite: true
